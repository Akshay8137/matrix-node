name: Build, Scan, and Push Docker Image (Multi-Arch, Dockerfile Generated)

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build-scan:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        arch: [amd64, arm64]
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Generate Dockerfile
        run: |
          cat > Dockerfile <<'EOF'
          FROM node:20-alpine
          WORKDIR /app
          COPY package.json package-lock.json ./
          RUN npm ci
          COPY . .
          EXPOSE 8080
          CMD ["node", "index.js"]
          EOF

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build Docker image for ${{ matrix.arch }}
        uses: docker/build-push-action@v5
        with:
          context: .
          file: Dockerfile
          platforms: linux/${{ matrix.arch }}
          push: false
          load: true 
          tags: local/akshay-demo:${{ matrix.arch }}

      - name: Log in to DockerHub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}


      - name: Scan Docker image using Docker Scout
        uses: docker/scout-action@v1
        with:
         command: cves
         image: local/akshay-demo:${{ matrix.arch }}
  push-image:
    needs: build-scan
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Generate Dockerfile
        run: |
          cat > Dockerfile <<'EOF'
          FROM node:20-alpine
          WORKDIR /app
          COPY package.json package-lock.json ./
          RUN npm ci
          COPY . .
          EXPOSE 8080
          CMD ["node", "index.js"]
          EOF

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to GHCR
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ secrets.USERNAME }}
          password: ${{ secrets.TOKEN }}

      - name: Build and Push Multi-Arch Docker Image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: Dockerfile
          platforms: linux/amd64,linux/arm64
          push: true
          tags: |
            ghcr.io/matrix-node:latest
            ghcr.io/matrix-node:${{ github.sha }}
